5321eea5e0f89e0f24f3ccba09b03505
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = IdentificationAnswerInput;
var _react = _interopRequireWildcard(require("react"));
var _MathRenderer = _interopRequireDefault(require("./MathRenderer"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function IdentificationAnswerInput({
  answer,
  handleIdentificationAnswerChange,
  question
}) {
  const [input, setInput] = (0, _react.useState)('');
  const [questionNumber, setQuestionNumber] = (0, _react.useState)(0);
  const [mathExpressions, setMathExpressions] = (0, _react.useState)('');
  const handleMathInputChange = (id, e) => {
    const rawInput = e.target.value;
    setInput(rawInput);
    let formattedExpression = rawInput.replace(/\^/g, '^');
    formattedExpression = formattedExpression.replace(/\*/g, '\\cdot ');
    setMathExpressions(formattedExpression);
    handleIdentificationAnswerChange(id, e.target.value);
  };
  (0, _react.useEffect)(() => {}, [mathExpressions]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
    children: question.question_type == 'IDE-COM' ? /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "mb-[20px] flex w-full flex-col items-center rounded-[20px] bg-[#EFF7FF] p-[30px] drop-shadow-lg",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
        className: "mb-[10px] w-full text-center text-[16px] font-extrabold",
        children: question.question
      }), question.question_image && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "mb-[15px] flex justify-center",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
          src: question.question_image,
          alt: "Question",
          className: "max-h-[200px] rounded-[10px] object-cover"
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "flex w-full flex-col",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
          type: "text",
          value: answer.userAnswer,
          onChange: e => {
            handleMathInputChange(answer.id, e);
          },
          placeholder: "Enter mathematical expression (e.g., x^2 + 2x + 1)",
          className: `focus:none mb-[20px] w-full rounded-full bg-white px-[30px] py-[10px] font-extrabold text-[#646464] transition`
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "flex min-h-[40px] w-full items-center justify-center",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_MathRenderer.default, {
            expression: answer.userAnswer,
            displayMode: true
          })
        })]
      })]
    }) : /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: "mb-[20px] flex w-full flex-col items-center rounded-[20px] bg-[#EFF7FF] p-[30px] drop-shadow-lg",
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
        className: "mb-[10px] w-full text-center text-[16px] font-extrabold",
        children: question.question
      }), question.question_image && /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "mb-[15px] flex justify-center",
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
          src: question.question_image,
          alt: "Question",
          className: "max-h-[200px] rounded-[10px] object-cover"
        })
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
        id: `${0}-${answer.id}`,
        type: "text",
        name: `${0}-${answer.id}`,
        value: answer.userAnswer,
        onChange: event => {
          handleIdentificationAnswerChange(answer.id, event.target.value);
        },
        placeholder: "Enter your answer",
        className: `focus:none w-full rounded-full bg-white px-[30px] py-[10px] font-extrabold text-[#646464] transition`
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,