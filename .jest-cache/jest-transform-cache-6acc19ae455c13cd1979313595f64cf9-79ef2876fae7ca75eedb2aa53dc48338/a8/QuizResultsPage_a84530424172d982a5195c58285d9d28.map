{"version":3,"names":["_react","_interopRequireDefault","require","_MathRenderer","_jsxRuntime","QuizResultsPage","question","answer","correct","submittedAnswers","index","getChoiceData","choice","text","image","id","getChoiceStyle","choiceText","isCorrect","isUserAnswer","correctAnswer","userAnswer","renderIdentificationResult","isMathematical","question_type","jsxs","className","children","question_image","jsx","src","alt","default","expression","displayMode","renderMultipleChoiceResult","choices","map","choice_index","choiceData"],"sources":["QuizResultsPage.jsx"],"sourcesContent":["import React from 'react';\nimport MathRenderer from '../components/MathRenderer';\n\nexport default function QuizResultsPage({ question, answer, correct, submittedAnswers, index }) {\n\t// Helper function to get choice text and image\n\tconst getChoiceData = (choice) => {\n\t\tif (typeof choice === 'object' && choice !== null) {\n\t\t\treturn {\n\t\t\t\ttext: choice.text || choice,\n\t\t\t\timage: choice.image,\n\t\t\t\tid: choice.id\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\ttext: choice,\n\t\t\timage: null,\n\t\t\tid: null\n\t\t};\n\t};\n\n\t// Helper function to determine choice styling\n\tconst getChoiceStyle = (choiceText, isCorrect, isUserAnswer) => {\n\t\tif (isCorrect && choiceText === submittedAnswers[index].correctAnswer) {\n\t\t\treturn 'w-full py-[10px] px-[30px] rounded-full text-white font-extrabold transition bg-[#00CA4E]';\n\t\t} else if (choiceText === submittedAnswers[index].correctAnswer) {\n\t\t\treturn 'w-full py-[10px] px-[30px] rounded-full text-white font-extrabold transition bg-[#00CA4E]';\n\t\t} else if (choiceText === submittedAnswers[index].userAnswer) {\n\t\t\treturn 'w-full py-[10px] px-[30px] rounded-full text-white font-extrabold transition bg-[#FF605C]';\n\t\t} else {\n\t\t\treturn 'w-full py-[10px] px-[30px] rounded-full text-[#646464] font-extrabold transition bg-white';\n\t\t}\n\t};\n\n\t// Render identification question results\n\tconst renderIdentificationResult = () => {\n\t\tconst isMathematical = question.question_type === 'IDE-COM';\n\n\t\treturn (\n\t\t\t<div className=\"flex flex-col gap-[10px]\">\n\t\t\t\t{/* Question Image */}\n\t\t\t\t{question.question_image && (\n\t\t\t\t\t<div className=\"mb-[15px] flex justify-center\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={question.question_image}\n\t\t\t\t\t\t\talt=\"Question\"\n\t\t\t\t\t\t\tclassName=\"max-h-[200px] rounded-[10px] object-cover\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{/* Correct Answer Display */}\n\t\t\t\t<div className=\"flex flex-col gap-[5px]\">\n\t\t\t\t\t<p className=\"text-sm font-semibold text-gray-600\">Correct Answer:</p>\n\t\t\t\t\t<div className=\"flex flex-row items-center rounded-lg bg-green-100 p-2\">\n\t\t\t\t\t\t{isMathematical ? (\n\t\t\t\t\t\t\t<MathRenderer expression={submittedAnswers[index].correctAnswer} displayMode={true} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p className=\"w-full text-sm\">{submittedAnswers[index].correctAnswer}</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{/* User Answer Display */}\n\t\t\t\t<div className=\"flex flex-col gap-[5px]\">\n\t\t\t\t\t<p className=\"text-sm font-semibold text-gray-600\">Your Answer:</p>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`flex flex-row items-center rounded-lg p-2 ${\n\t\t\t\t\t\t\tcorrect ? 'bg-green-100' : 'bg-red-100'\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{isMathematical ? (\n\t\t\t\t\t\t\t<MathRenderer expression={submittedAnswers[index].userAnswer} displayMode={true} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p className=\"w-full text-sm\">{submittedAnswers[index].userAnswer}</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// Render multiple choice question results\n\tconst renderMultipleChoiceResult = () => {\n\t\treturn (\n\t\t\t<div className=\"flex flex-col gap-[10px]\">\n\t\t\t\t{/* Question Image */}\n\t\t\t\t{question.question_image && (\n\t\t\t\t\t<div className=\"mb-[15px] flex justify-center\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={question.question_image}\n\t\t\t\t\t\t\talt=\"Question\"\n\t\t\t\t\t\t\tclassName=\"max-h-[200px] rounded-[10px] object-cover\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{/* Choices */}\n\t\t\t\t<div className=\"flex flex-col gap-[10px]\">\n\t\t\t\t\t{question.choices.map((choice, choice_index) => {\n\t\t\t\t\t\tconst choiceData = getChoiceData(choice);\n\t\t\t\t\t\tconst isMathematical =\n\t\t\t\t\t\t\tquestion.question_type === 'MUL-COM' ||\n\t\t\t\t\t\t\tquestion.question_type === 'COM' ||\n\t\t\t\t\t\t\tquestion.question_type === 'IDE-COM';\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={choice_index}\n\t\t\t\t\t\t\t\tclassName={getChoiceStyle(\n\t\t\t\t\t\t\t\t\tchoiceData.text,\n\t\t\t\t\t\t\t\t\tcorrect,\n\t\t\t\t\t\t\t\t\tchoiceData.text === submittedAnswers[index].userAnswer\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"flex flex-col items-center gap-[10px]\">\n\t\t\t\t\t\t\t\t\t{/* Choice Image */}\n\t\t\t\t\t\t\t\t\t{choiceData.image && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex justify-center\">\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={choiceData.image}\n\t\t\t\t\t\t\t\t\t\t\t\talt={`Choice ${choice_index + 1}`}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"max-h-[120px] rounded-[8px] object-cover\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t{/* Choice Text/Expression */}\n\t\t\t\t\t\t\t\t\t{isMathematical ? (\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t\t\t\t\t\t\t<MathRenderer expression={choiceData.text} displayMode={false} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center text-[14px] font-extrabold\">{choiceData.text}</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`flex w-full flex-col drop-shadow-md ${\n\t\t\t\tcorrect ? 'bg-[#F0FFF0]' : 'bg-[#FFF0F0]'\n\t\t\t} rounded-[20px] px-[30px] pt-[20px] pb-[30px]`}\n\t\t>\n\t\t\t<div className=\"flex w-full flex-col justify-between\">\n\t\t\t\t<p className=\"w-full rounded pb-[10px] text-center text-[16px] font-extrabold focus:ring focus:ring-blue-200 focus:outline-none\">\n\t\t\t\t\t{question.question}\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t{/* Render based on question type */}\n\t\t\t{question.question_type === 'IDE' || question.question_type === 'IDE-COM'\n\t\t\t\t? renderIdentificationResult()\n\t\t\t\t: renderMultipleChoiceResult()}\n\t\t</div>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}