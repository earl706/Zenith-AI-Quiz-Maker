{"version":3,"names":["_react","_interopRequireWildcard","require","_api","_interopRequireDefault","_apiQuizzes","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","AuthContext","exports","createContext","AuthProvider","children","user","setUser","useState","deleteMode","setDeleteMode","quizzes","setQuizzes","quizAttempt","setQuizAttempt","isAuthenticated","setIsAuthenticated","quizDeleteData","setQuizDeleteData","quiz_id","questions","quiz_title","date_created","public","owner","getAccessToken","localStorage","getItem","getRefreshToken","setTokens","access","refresh","setItem","clearTokens","removeItem","isTokenExpired","token","payload","JSON","parse","atob","split","exp","Date","now","error","useEffect","checkAuthStatus","accessToken","refreshToken","userData","response","data","logout","resendVerification","email","resend_verification_response","API","post","err","login","username","password","login_response","console","log","stringify","user_data","refresh_token","refresh_token_response","register","register_response","getUserData","user_data_response","getAttemptsList","attempts_data_response","API_QUIZZES","updateUserData","userEditData","user_update_response","put","createQuiz","quizData","createquiz_response","updateQuiz","id","quizEditData","quiz_update_response","getQuizList","getquizlist_response","getQuiz","randomize","getquiz_response","params","getQuizSummary","quiz_summary_response","attemptQuiz","quiz_attempt_response","submitQuizAnswers","answers","time","quiz_answers_submission_response","deleteQuiz","deletequiz_response","delete","generateQuiz","topic","questionNumber","jsx","Provider","value"],"sources":["AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport API from '../services/api';\nimport API_QUIZZES from '../services/apiQuizzes';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n\tconst [user, setUser] = useState(null);\n\tconst [deleteMode, setDeleteMode] = useState(false);\n\tconst [quizzes, setQuizzes] = useState([]);\n\tconst [quizAttempt, setQuizAttempt] = useState(false);\n\tconst [isAuthenticated, setIsAuthenticated] = useState(false);\n\tconst [quizDeleteData, setQuizDeleteData] = useState({\n\t\tquiz_id: '',\n\t\tquestions: [],\n\t\tquiz_title: '',\n\t\tdate_created: '',\n\t\tpublic: false,\n\t\towner: 0\n\t});\n\n\t// Token management functions\n\tconst getAccessToken = () => {\n\t\treturn localStorage.getItem('zenithQuizMakerAccessToken');\n\t};\n\n\tconst getRefreshToken = () => {\n\t\treturn localStorage.getItem('zenithQuizMakerRefreshToken');\n\t};\n\n\tconst setTokens = (access, refresh) => {\n\t\tlocalStorage.setItem('zenithQuizMakerAccessToken', access);\n\t\tlocalStorage.setItem('zenithQuizMakerRefreshToken', refresh);\n\t};\n\n\tconst clearTokens = () => {\n\t\tlocalStorage.removeItem('zenithQuizMakerAccessToken');\n\t\tlocalStorage.removeItem('zenithQuizMakerRefreshToken');\n\t\tlocalStorage.removeItem('userData');\n\t};\n\n\tconst isTokenExpired = (token) => {\n\t\tif (!token) return true;\n\t\ttry {\n\t\t\tconst payload = JSON.parse(atob(token.split('.')[1]));\n\t\t\treturn payload.exp * 1000 < Date.now();\n\t\t} catch (error) {\n\t\t\treturn true;\n\t\t}\n\t};\n\n\t// Check authentication status on app load\n\tuseEffect(() => {\n\t\tconst checkAuthStatus = async () => {\n\t\t\tconst accessToken = getAccessToken();\n\t\t\tconst refreshToken = getRefreshToken();\n\n\t\t\tif (accessToken && !isTokenExpired(accessToken)) {\n\t\t\t\tsetIsAuthenticated(true);\n\t\t\t\tconst userData = localStorage.getItem('userData');\n\t\t\t\tif (userData) {\n\t\t\t\t\tsetUser(JSON.parse(userData));\n\t\t\t\t}\n\t\t\t} else if (refreshToken) {\n\t\t\t\t// Try to refresh the token\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await refreshToken(refreshToken);\n\t\t\t\t\tif (response.data) {\n\t\t\t\t\t\tsetTokens(response.data.access, response.data.refresh);\n\t\t\t\t\t\tsetIsAuthenticated(true);\n\t\t\t\t\t\tconst userData = localStorage.getItem('userData');\n\t\t\t\t\t\tif (userData) {\n\t\t\t\t\t\t\tsetUser(JSON.parse(userData));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Refresh failed, clear tokens\n\t\t\t\t\tclearTokens();\n\t\t\t\t\tsetIsAuthenticated(false);\n\t\t\t\t\tsetUser(null);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tcheckAuthStatus();\n\t}, []);\n\n\tconst logout = () => {\n\t\tclearTokens();\n\t\tsetUser(null);\n\t\tsetIsAuthenticated(false);\n\t\t// Optionally call logout endpoint to invalidate refresh token\n\t\t// API.post('api/users/logout/', { refresh: getRefreshToken() });\n\t};\n\n\tconst resendVerification = async (email) => {\n\t\ttry {\n\t\t\tconst resend_verification_response = await API.post('api/users/email/resend/', {\n\t\t\t\temail: email\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst login = async (username, password) => {\n\t\ttry {\n\t\t\tconst login_response = await API.post('api/users/login/', {\n\t\t\t\tusername: username,\n\t\t\t\tpassword: password\n\t\t\t});\n\t\t\tconsole.log(login_response);\n\n\t\t\t// Store tokens securely\n\t\t\tsetTokens(login_response.data.access, login_response.data.refresh);\n\t\t\tlocalStorage.setItem('userData', JSON.stringify(login_response.data.user_data));\n\n\t\t\t// Update authentication state\n\t\t\tsetIsAuthenticated(true);\n\t\t\tsetUser(login_response.data.user_data);\n\n\t\t\treturn login_response;\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst refreshToken = async (refresh_token) => {\n\t\ttry {\n\t\t\tconst refresh_token_response = await API.post('api/users/token/refresh/', {\n\t\t\t\trefresh: refresh_token\n\t\t\t});\n\n\t\t\t// Update stored tokens if refresh was successful\n\t\t\tif (refresh_token_response.data && refresh_token_response.data.access) {\n\t\t\t\tsetTokens(\n\t\t\t\t\trefresh_token_response.data.access,\n\t\t\t\t\trefresh_token_response.data.refresh || refresh_token\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn refresh_token_response;\n\t\t} catch (err) {\n\t\t\t// If refresh fails, clear tokens and logout\n\t\t\tclearTokens();\n\t\t\tsetIsAuthenticated(false);\n\t\t\tsetUser(null);\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst register = async (data) => {\n\t\ttry {\n\t\t\tconst register_response = await API.post('dj-rest-auth/registration/', data);\n\t\t\treturn register_response;\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\t};\n\n\tconst getUserData = async () => {\n\t\ttry {\n\t\t\tconst user_data_response = await API.get('api/users/profile/');\n\t\t\treturn user_data_response;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst getAttemptsList = async () => {\n\t\ttry {\n\t\t\tconst attempts_data_response = await API_QUIZZES.get('quiz/attempts/');\n\t\t\treturn attempts_data_response;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst updateUserData = async (userEditData) => {\n\t\ttry {\n\t\t\tconst user_update_response = await API.put('api/users/profile/', userEditData);\n\t\t\treturn user_update_response;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst createQuiz = async (quizData) => {\n\t\ttry {\n\t\t\tconst createquiz_response = await API_QUIZZES.post('quiz/', quizData);\n\t\t\treturn createquiz_response;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst updateQuiz = async (id, quizEditData) => {\n\t\ttry {\n\t\t\tconst quiz_update_response = await API_QUIZZES.put(`quiz/update/${id}/`, quizEditData);\n\t\t\treturn quiz_update_response;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst getQuizList = async () => {\n\t\ttry {\n\t\t\tconst getquizlist_response = await API_QUIZZES.get('quiz/');\n\t\t\treturn getquizlist_response;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst getQuiz = async (id, randomize = true) => {\n\t\ttry {\n\t\t\tconst getquiz_response = await API_QUIZZES.get(`quiz/${id}/`, {\n\t\t\t\tparams: {\n\t\t\t\t\trandomize: randomize\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn getquiz_response;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst getQuizSummary = async (id) => {\n\t\ttry {\n\t\t\tconst quiz_summary_response = await API_QUIZZES.get(`quiz/summary/${id}/`);\n\t\t\treturn quiz_summary_response;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst attemptQuiz = async (id) => {\n\t\ttry {\n\t\t\tconst quiz_attempt_response = await API_QUIZZES.post(`quiz/attempt/${id}/`);\n\t\t\treturn quiz_attempt_response;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst submitQuizAnswers = async (id, answers, time) => {\n\t\ttry {\n\t\t\tconst quiz_answers_submission_response = await API_QUIZZES.post(`quiz/submit/${id}/`, {\n\t\t\t\tanswers: answers,\n\t\t\t\ttime: time\n\t\t\t});\n\t\t\treturn quiz_answers_submission_response;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst deleteQuiz = async (id) => {\n\t\ttry {\n\t\t\tconst deletequiz_response = await API_QUIZZES.delete(`quiz/${id}/`);\n\t\t\treturn deletequiz_response;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst generateQuiz = async (topic, questionNumber) => {\n\t\ttry {\n\t\t\tconst response = await API_QUIZZES.post('quiz/generate/', {\n\t\t\t\ttopic: topic,\n\t\t\t\tquestionNumber: questionNumber\n\t\t\t});\n\t\t\treturn response;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t};\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{\n\t\t\t\tuser,\n\t\t\t\tisAuthenticated,\n\t\t\t\tlogin,\n\t\t\t\tlogout,\n\t\t\t\tregister,\n\t\t\t\tgetUserData,\n\t\t\t\tupdateUserData,\n\t\t\t\trefreshToken,\n\t\t\t\tgetAccessToken,\n\t\t\t\tgetRefreshToken,\n\t\t\t\tisTokenExpired,\n\t\t\t\tquizzes,\n\t\t\t\tsetQuizzes,\n\t\t\t\tcreateQuiz,\n\t\t\t\tupdateQuiz,\n\t\t\t\tgenerateQuiz,\n\t\t\t\tgetQuizList,\n\t\t\t\tgetQuiz,\n\t\t\t\tgetQuizSummary,\n\t\t\t\tattemptQuiz,\n\t\t\t\tgetAttemptsList,\n\t\t\t\tdeleteMode,\n\t\t\t\tsubmitQuizAnswers,\n\t\t\t\tdeleteQuiz,\n\t\t\t\tsetDeleteMode,\n\t\t\t\tquizDeleteData,\n\t\t\t\tsetQuizDeleteData\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t);\n};\n"],"mappings":"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","ignoreList":[]}